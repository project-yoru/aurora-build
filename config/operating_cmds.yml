# TODO merge cmds for dev and prod, add nvm prefix automatically

:default: &default
  :pull: |-
    cd %{building_workspace_path} &&
    git clone --depth=1 %{git_repo_path} ./app_content &&
    mv ./app_content/config ./app/ &&
    mv ./app_content/story ./app/ &&
    mv ./app_content/resources ./app/ &&
    rm -rf ./app_content

:development:
  <<: *default
  :parse_app_config_cson: |-
    bash -lc "
    source $NVM_DIR/nvm.sh &&
    nvm use node &&
    cd %{app_config_dir} &&
    cson2json application.cson > application.json"
  :build_web: |-
    bash -lc "
    source $NVM_DIR/nvm.sh &&
    nvm use node &&
    cd %{building_workspace_path} &&
    gulp build %{bundle_opt} %{cdn_opt}"
  :init_cordova: |-
    bash -lc "
    source $NVM_DIR/nvm.sh &&
    nvm use node &&
    cd %{building_workspace_path} &&
    cordova create cordova_workspace %{app_id} \"%{app_name}\" &&
    cd cordova_workspace &&
    cordova platform add %{platform} &&
    rm -rf ./www &&
    mv %{built_web_dist_path} ./www"
  :build_via_cordova: |-
    bash -lc "
    source $NVM_DIR/nvm.sh &&
    nvm use node &&
    cd %{building_workspace_path} &&
    cd cordova_workspace &&
    cordova build %{platform}"
  :compress: |-
    cd %{building_workspace_path}/dist &&
    zip -r %{archive_file_path} ./*
  :storage:
    # :create_bucket:
    #   :azure: |-
    #     deprecated since blobxfer is able to create container while syncing
    #     :create_container: |-
    #       bash -lc "
    #       source $NVM_DIR/nvm.sh &&
    #       nvm use node &&
    #       azure storage container create --account-name %{account_name} --account-key %{access_key} %{container_name}"

    :sync_directory:
      # 1 sync (and create container) via blobxfer
      # 2 set container access level via azure-cli
      :azure: |-
        cd %{local_path} &&
        blobxfer %{account_name} %{container_name} . --storageaccountkey %{access_key} --upload &&
        bash -lc "
        source $NVM_DIR/nvm.sh &&
        nvm use node &&
        azure storage container set --account-name %{account_name} --account-key %{access_key} --permission Blob %{container_name}"
      # 1 create bucket
      # 2 set bucket default permission
      # 3 sync
      # 4 TODO set index.html
      :gcp: |-
        gsutil mb -c dra -l US -p project-yoru gs://%{bucket_name} &&
        gsutil defacl set public-read gs://%{bucket_name} &&
        gsutil -m rsync -c -r %{local_path} gs://%{bucket_name}


:production:
  <<: *default
  :parse_app_config_cson: |-
    bash -lc "
    cd %{app_config_dir} &&
    cson2json application.cson > application.json"
  :build_web: |-
    bash -lc "
    source $HOME/.rvm/scripts/rvm &&
    cd %{building_workspace_path} &&
    gulp build %{bundle_opt} %{cdn_opt}"
  :init_cordova: |-
    bash -lc "
    cd %{building_workspace_path} &&
    cordova create cordova_workspace %{app_id} \"%{app_name}\" &&
    cd cordova_workspace &&
    cordova platform add %{platform} &&
    rm -rf ./www &&
    mv %{built_web_dist_path} ./www"
  :build_via_cordova: |-
    bash -lc "
    cd %{building_workspace_path} &&
    cd cordova_workspace &&
    cordova build %{platform}"
  :compress: |-
    cd %{building_workspace_path}/dist &&
    zip -r -9 %{archive_file_path} ./*
  :storage:
    :sync_directory:
      # 1 sync (and create container) via blobxfer
      # 2 set container access level via azure-cli
      :azure: |-
        cd %{local_path} &&
        blobxfer %{account_name} %{container_name} . --storageaccountkey %{access_key} --upload &&
        azure storage container set --account-name %{account_name} --account-key %{access_key} --permission Blob %{container_name}
      # 1 create bucket
      # 2 set bucket default permission
      # 3 sync
      :gcp: |-
        gsutil mb -c dra -l US -p project-yoru gs://%{bucket_name} &&
        gsutil defacl set public-read gs://%{bucket_name} &&
        gsutil -m rsync -c -r %{local_path} gs://%{bucket_name}
